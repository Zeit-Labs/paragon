{"version":3,"file":"component---src-pages-foundations-elevation-jsx-7651cfaec717c841e52d.js","mappings":"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","sources":["webpack://paragon-pattern-library-documentation/../node_modules/react-bootstrap/esm/CloseButton.js","webpack://paragon-pattern-library-documentation/../src/Input/index.jsx","webpack://paragon-pattern-library-documentation/../node_modules/react-bootstrap/esm/ToastContext.js","webpack://paragon-pattern-library-documentation/../node_modules/react-bootstrap/esm/ToastHeader.js","webpack://paragon-pattern-library-documentation/../node_modules/react-bootstrap/esm/ToastBody.js","webpack://paragon-pattern-library-documentation/../node_modules/react-bootstrap/esm/Toast.js","webpack://paragon-pattern-library-documentation/../src/Toast/ToastContainer.jsx","webpack://paragon-pattern-library-documentation/../src/Toast/index.jsx","webpack://paragon-pattern-library-documentation/./src/pages/foundations/elevation.jsx","webpack://paragon-pattern-library-documentation/./node_modules/react-intl/lib/src/components/useIntl.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"label\", \"onClick\", \"className\"];\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nvar propTypes = {\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n};\nvar defaultProps = {\n  label: 'Close'\n};\nvar CloseButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var label = _ref.label,\n      onClick = _ref.onClick,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"button\", _extends({\n    ref: ref,\n    type: \"button\",\n    className: classNames('close', className),\n    onClick: onClick\n  }, props), /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, label));\n});\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nclass Input extends React.Component {\n  componentDidMount() {\n    if (process.env.NODE_ENV === 'development') {\n      this.checkHasLabel();\n    }\n  }\n\n  getHTMLTagForType() {\n    const { type } = this.props;\n    if (type === 'select' || type === 'textarea') { return type; }\n    return 'input';\n  }\n\n  getClassNameForType() {\n    switch (this.props.type) {\n      case 'file':\n        return 'form-control-file';\n      case 'checkbox':\n      case 'radio':\n        return 'form-check-input';\n      default:\n        return 'form-control';\n    }\n  }\n\n  setRef(forwardedRef) {\n    // In production just return the optional forwardedRef\n    if (process.env.NODE_ENV !== 'development') { return forwardedRef; }\n\n    return (element) => {\n      if (forwardedRef) { forwardedRef.current = element; } // eslint-disable-line no-param-reassign\n      this.inputEl = element;\n    };\n  }\n\n  checkHasLabel() {\n    if (this.inputEl.labels.length > 0) { return; }\n    if (this.inputEl.getAttribute('aria-label') !== null) { return; }\n    if (this.inputEl.getAttribute('aria-labelledby') !== null) { return; }\n\n    if (console) {\n      // eslint-disable-next-line no-console\n      console.warn('Input[a11y]: There is no associated label for this Input');\n    }\n  }\n\n  renderOptions(options) {\n    return options.map((option) => {\n      const {\n        value,\n        label,\n        group,\n        ...attributes\n      } = option;\n\n      if (group) {\n        return (\n          <optgroup key={`optgroup-${label}`} label={label} {...attributes}>\n            {this.renderOptions(group)}\n          </optgroup>\n        );\n      }\n      return (\n        <option key={value} value={value} {...attributes}>\n          {label}\n        </option>\n      );\n    }, this);\n  }\n\n  render() {\n    const {\n      type,\n      className,\n      options,\n      forwardedRef, // eslint-disable-line react/prop-types\n      ...attributes // eslint-disable-line react/prop-types\n    } = this.props;\n\n    const htmlTag = this.getHTMLTagForType();\n    const htmlProps = {\n      className: classNames(this.getClassNameForType(), className),\n      type: htmlTag === 'input' ? type : undefined,\n      ...attributes,\n      ref: this.setRef(forwardedRef),\n    };\n    const htmlChildren = type === 'select' ? this.renderOptions(options) : null;\n\n    return React.createElement(htmlTag, htmlProps, htmlChildren);\n  }\n}\n\nInput.propTypes = {\n  /** specifies the type of component.\n   * One of select, textarea, or any valid type for an html input tag. */\n  type: PropTypes.oneOf([\n    'textarea',\n    'select',\n    'checkbox',\n    'color',\n    'date',\n    'datetime',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n  ]).isRequired,\n  /** specifies the className in addition to a bootstrap class name. */\n  className: PropTypes.string,\n  /** should be used to specify the options of an Input of type select */\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    disabled: PropTypes.bool,\n    group: PropTypes.arrayOf(PropTypes.shape({\n      label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      disabled: PropTypes.bool,\n    })),\n  })),\n};\n\nInput.defaultProps = {\n  className: undefined,\n  options: [],\n};\n\n// eslint-disable-next-line react/no-multi-comp\nconst InputWithRefForwarding = React.forwardRef((props, ref) => (\n  <Input forwardedRef={ref} {...props} />\n));\n\nexport default InputWithRefForwarding;\n","import React from 'react'; // TODO: check\n\nvar ToastContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onClose: function onClose() {}\n});\nexport default ToastContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"closeLabel\", \"closeButton\", \"className\", \"children\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CloseButton from './CloseButton';\nimport ToastContext from './ToastContext';\nvar defaultProps = {\n  closeLabel: 'Close',\n  closeButton: true\n};\nvar ToastHeader = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      closeLabel = _ref.closeLabel,\n      closeButton = _ref.closeButton,\n      className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast-header');\n  var context = useContext(ToastContext);\n  var handleClick = useEventCallback(function (e) {\n    if (context && context.onClose) {\n      context.onClose(e);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(bsPrefix, className)\n  }), children, closeButton && /*#__PURE__*/React.createElement(CloseButton, {\n    label: closeLabel,\n    onClick: handleClick,\n    className: \"ml-2 mb-1\",\n    \"data-dismiss\": \"toast\"\n  }));\n});\nToastHeader.displayName = 'ToastHeader';\nToastHeader.defaultProps = defaultProps;\nexport default ToastHeader;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('toast-body');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"transition\", \"show\", \"animation\", \"delay\", \"autohide\", \"onClose\"];\nimport React, { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Fade from './Fade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nvar Toast = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      _ref$transition = _ref.transition,\n      Transition = _ref$transition === void 0 ? Fade : _ref$transition,\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? true : _ref$show,\n      _ref$animation = _ref.animation,\n      animation = _ref$animation === void 0 ? true : _ref$animation,\n      _ref$delay = _ref.delay,\n      delay = _ref$delay === void 0 ? 3000 : _ref$delay,\n      _ref$autohide = _ref.autohide,\n      autohide = _ref$autohide === void 0 ? false : _ref$autohide,\n      onClose = _ref.onClose,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast'); // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n\n  var delayRef = useRef(delay);\n  var onCloseRef = useRef(onClose);\n  useEffect(function () {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  var autohideTimeout = useTimeout();\n  var autohideToast = !!(autohide && show);\n  var autohideFunc = useCallback(function () {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(function () {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  var toastContext = useMemo(function () {\n    return {\n      onClose: onClose\n    };\n  }, [onClose]);\n  var hasAnimation = !!(Transition && animation);\n  var toast = /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(bsPrefix, className, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  }), children);\n  return /*#__PURE__*/React.createElement(ToastContext.Provider, {\n    value: toastContext\n  }, hasAnimation && Transition ? /*#__PURE__*/React.createElement(Transition, {\n    in: show,\n    unmountOnExit: true\n  }, toast) : toast);\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nclass ToastContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toastRootName = 'toast-root';\n    if (typeof document === 'undefined') {\n      this.rootElement = null;\n    } else if (document.getElementById(this.toastRootName)) {\n      this.rootElement = document.getElementById(this.toastRootName);\n    } else {\n      const rootElement = document.createElement('div');\n      rootElement.setAttribute('id', this.toastRootName);\n      rootElement.setAttribute('class', 'toast-container');\n      rootElement.setAttribute('role', 'alert');\n      rootElement.setAttribute('aria-live', 'polite');\n      rootElement.setAttribute('aria-atomic', 'true');\n      this.rootElement = document.body.appendChild(rootElement);\n    }\n  }\n\n  render() {\n    if (this.rootElement) {\n      return ReactDOM.createPortal(\n        this.props.children,\n        this.rootElement,\n      );\n    }\n    return null;\n  }\n}\n\nToastContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ToastContainer;\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport BaseToast from 'react-bootstrap/Toast';\nimport { useIntl } from 'react-intl';\n\nimport { Close } from '../../icons';\nimport ToastContainer from './ToastContainer';\nimport { Button, IconButton, Icon } from '..';\n\nexport const TOAST_CLOSE_LABEL_TEXT = 'Close';\nexport const TOAST_DELAY = 5000;\n\nfunction Toast({\n  action, children, className, closeLabel, onClose, show, ...rest\n}) {\n  const intl = useIntl();\n  const [autoHide, setAutoHide] = useState(true);\n  const intlCloseLabel = closeLabel || intl.formatMessage({\n    id: 'pgn.Toast.closeLabel',\n    defaultMessage: 'Close',\n    description: 'Close label for Toast component',\n  });\n  return (\n    <ToastContainer>\n      <BaseToast\n        autohide={autoHide}\n        className={classNames('pgn__toast', className)}\n        onClose={onClose}\n        onBlur={() => setAutoHide(true)}\n        onFocus={() => setAutoHide(false)}\n        onMouseOut={() => setAutoHide(true)}\n        onMouseOver={() => setAutoHide(false)}\n        show={show}\n        {...rest}\n      >\n        <div\n          className=\"toast-header\"\n        >\n          <p className=\"small\">{children}</p>\n          <div className=\"toast-header-btn-container\">\n            <IconButton\n              iconAs={Icon}\n              alt={intlCloseLabel}\n              className=\"align-self-start\"\n              src={Close}\n              onClick={onClose}\n              variant=\"primary\"\n              invertColors\n            />\n          </div>\n        </div>\n        {action && (\n          <Button\n            as={action.href ? 'a' : 'button'}\n            href={action.href}\n            onClick={action.onClick}\n            size=\"sm\"\n            variant=\"inverse-outline-primary\"\n          >\n            {action.label}\n          </Button>\n        )}\n      </BaseToast>\n    </ToastContainer>\n  );\n}\n\nToast.defaultProps = {\n  action: null,\n  closeLabel: undefined,\n  delay: TOAST_DELAY,\n  className: undefined,\n};\n\nToast.propTypes = {\n  /** A string or an element that is rendered inside the main body of the `Toast`. */\n  children: PropTypes.string.isRequired,\n  /**\n   * A function that is called on close. It can be used to perform\n   * actions upon closing of the `Toast`, such as setting the \"show\"\n   * element to false.\n   * */\n  onClose: PropTypes.func.isRequired,\n  /** Boolean used to control whether the `Toast` shows */\n  show: PropTypes.bool.isRequired,\n  /**\n   * Fields used to build optional action button.\n   * `label` is a string rendered inside the button.\n   * `href` is a link that will render the action button as an anchor tag.\n   * `onClick` is a function that is called when the button is clicked.\n   */\n  action: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    href: PropTypes.string,\n    onClick: PropTypes.func,\n  }),\n  /**\n   * Alt text for the `Toast`'s dismiss button. Defaults to 'Close'.\n   */\n  closeLabel: PropTypes.string,\n  /** Time in milliseconds for which the `Toast` will display. */\n  delay: PropTypes.number,\n  /** Class names for the `BaseToast` component */\n  className: PropTypes.string,\n};\n\nexport default Toast;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport SEO from '../../components/SEO';\nimport Layout from '../../components/PageLayout';\nimport {\n  Button, Form, Container, Input, Toast,\n// eslint-disable-next-line import/no-unresolved\n} from '~paragon-react';\n// eslint-disable-next-line\nimport { Close, WbSunny, DoDisturb } from '../../../../icons/index';\n\nimport { Icon, IconButtonWithTooltip } from '../../../../src'; // eslint-disable-line import/no-unresolved\n\nconst boxShadowSides = ['down', 'up', 'right', 'left', 'centered'];\nconst boxShadowLevels = [1, 2, 3, 4, 5];\nconst DEFAULT_BOX_SHADOW = '0px 0px 0px #000';\n\nconst controlsProps = [\n  { key: 'x', name: 'Offset X' },\n  { key: 'y', name: 'Offset Y' },\n  { key: 'blur', name: 'Blur' },\n  { key: 'spread', name: 'Spread' },\n  { key: 'color', name: 'Color' },\n];\n\nconst BoxShadowNode = () => {\n  const [showToast, setShowToast] = useState(false);\n\n  const isBoxShadowCopied = (level, side) => {\n    navigator.clipboard.writeText(`@include pgn-box-shadow(${level}, \"${side}\");`);\n    setShowToast(true);\n  };\n\n  const boxShadowCells = boxShadowLevels.map(level => (\n    boxShadowSides.map(side => (\n      <div\n        key={side}\n        role=\"button\"\n        className={`pgn-doc__box-shadow-cell box-shadow-${side}-${level}`}\n        tabIndex={0}\n        aria-label={`Box-shadow cell ${side}-${level}`}\n        onClick={() => isBoxShadowCopied(level, side)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            isBoxShadowCopied(level, side);\n          }\n        }}\n      />\n    ))\n  ));\n\n  return (\n    <div className=\"pgn-doc__box-shadow-cells\">\n      { boxShadowCells }\n      {(\n        <Toast\n          className=\"pgn-doc__box-shadow--toast\"\n          onClose={() => setShowToast(false)}\n          show={showToast}\n          delay={2000}\n        >\n          Box-shadow copied to clipboard!\n        </Toast>\n      )}\n    </div>\n  );\n};\n\nconst BoxShadowToolkit = ({\n  id,\n  updateBoxShadow,\n  removeBoxShadowLayer,\n  disableBoxShadowLayer,\n  enableBoxShadowLayer,\n  isDisabled,\n  canDelete,\n}) => {\n  const [boxShadowModel, setBoxShadowModel] = useState({\n    x: 0,\n    y: 0,\n    blur: 0,\n    spread: 0,\n    color: '#000',\n    inset: false,\n  });\n\n  const updateBoxShadowModel = (property, value) => {\n    global.analytics.track('openedx.paragon.elevation.generator.updated', { property, value });\n\n    const newBoxShadowModel = {\n      ...boxShadowModel,\n      [property]: value,\n    };\n\n    setBoxShadowModel(newBoxShadowModel);\n    updateBoxShadow(newBoxShadowModel, id);\n  };\n\n  return (\n    <section className=\"pgn-doc__box-shadow-toolkit--controls-box\">\n      {controlsProps.map(({ key, name }) => (\n        <Form.Label\n          className=\"d-block\"\n          key={key}\n          htmlFor={`toolkit-control-${key}`}\n        >\n          {name}\n          <Input\n            id={`toolkit-control-${key}-${id}`}\n            key={key}\n            min={key === 'x' || key === 'y' ? '-100' : '0'}\n            max=\"100\"\n            type={key === 'color' ? 'color' : 'range'}\n            defaultValue=\"0\"\n            onChange={(e) => updateBoxShadowModel(key, e.target.value)}\n            disabled={isDisabled}\n          />\n        </Form.Label>\n      ))}\n      <div className=\"pgn-doc__box-shadow-toolkit--controls-box--disable-btn-wrapper\">\n        <Form.Checkbox\n          onChange={() => updateBoxShadowModel('inset', !boxShadowModel.inset)}\n          floatLabelLeft\n          disabled={isDisabled}\n        >\n          Inset:\n        </Form.Checkbox>\n        <div>\n          {isDisabled ? (\n            <IconButtonWithTooltip\n              tooltipPlacement=\"top\"\n              tooltipContent=\"Enable layer\"\n              src={WbSunny}\n              iconAs={Icon}\n              alt=\"Enable layer\"\n              onClick={() => enableBoxShadowLayer(id)}\n              variant=\"success\"\n              className=\"pgn-doc__box-shadow-toolkit--controls-box--disable-btn\"\n            />\n          ) : (\n            <IconButtonWithTooltip\n              tooltipPlacement=\"top\"\n              tooltipContent=\"Disable layer\"\n              src={DoDisturb}\n              iconAs={Icon}\n              alt=\"Disable layer\"\n              onClick={() => disableBoxShadowLayer(id)}\n              variant=\"secondary\"\n              className=\"pgn-doc__box-shadow-toolkit--controls-box--disable-btn\"\n            />\n          )}\n          {canDelete && (\n            <IconButtonWithTooltip\n              tooltipPlacement=\"top\"\n              tooltipContent=\"Remove layer\"\n              src={Close}\n              iconAs={Icon}\n              alt=\"Remove layer\"\n              onClick={() => removeBoxShadowLayer(id)}\n              variant=\"danger\"\n              className=\"pgn-doc__box-shadow-toolkit--controls-box--remove-btn\"\n            />\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nBoxShadowToolkit.propTypes = {\n  updateBoxShadow: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n  removeBoxShadowLayer: PropTypes.func.isRequired,\n  disableBoxShadowLayer: PropTypes.func.isRequired,\n  enableBoxShadowLayer: PropTypes.func.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n  canDelete: PropTypes.bool.isRequired,\n};\n\nconst BoxShadowGenerator = () => {\n  const [boxShadows, setBoxShadows] = useState([{ id: 1, enabled: true, style: DEFAULT_BOX_SHADOW }]);\n\n  const updateBoxShadow = (shadow, id) => {\n    setBoxShadows(boxShadows.map(item => {\n      if (id === item.id) {\n        return {\n          ...item,\n          style: shadow.inset\n            ? `inset ${shadow.x}px ${shadow.y}px ${shadow.blur}px ${shadow.spread}px ${shadow.color}`\n            : `${shadow.x}px ${shadow.y}px ${shadow.blur}px ${shadow.spread}px ${shadow.color}`,\n        };\n      }\n      return { ...item };\n    }));\n  };\n\n  const addNewBoxShadowLayer = () => {\n    global.analytics.track('openedx.paragon.elevation.generator.layer.added');\n    setBoxShadows([\n      ...boxShadows,\n      { id: boxShadows[boxShadows.length - 1].id + 1, enabled: true, style: DEFAULT_BOX_SHADOW },\n    ]);\n  };\n\n  const removeBoxShadowLayer = (toolkitId) => {\n    global.analytics.track('openedx.paragon.elevation.shadow-generator.layer.removed');\n    setBoxShadows(boxShadows.filter((shadow) => shadow.id !== toolkitId));\n  };\n\n  const disableBoxShadowLayer = (toolkitId) => {\n    global.analytics.track('openedx.paragon.elevation.shadow-generator.layer.disabled');\n    const updatedBoxShadows = boxShadows\n      .map((shadow) => {\n        if (shadow.id === toolkitId) {\n          return { ...shadow, enabled: false };\n        }\n        return shadow;\n      });\n    setBoxShadows(updatedBoxShadows);\n  };\n\n  const enableBoxShadowLayer = (toolkitId) => {\n    global.analytics.track('openedx.paragon.elevation.shadow-generator.layer.enabled');\n    const updatedBoxShadows = boxShadows\n      .map((shadow) => {\n        if (shadow.id === toolkitId) {\n          return { ...shadow, enabled: true };\n        }\n        return shadow;\n      });\n    setBoxShadows(updatedBoxShadows);\n  };\n\n  return (\n    <section className=\"pgn-doc__box-shadow-generator\">\n      <div className=\"pgn-doc__box-shadow-generator__preview\">\n        <div\n          className=\"pgn-doc__box-shadow-generator__preview-box border\"\n          style={{ boxShadow: boxShadows.filter(shadow => shadow.enabled).map(shadow => shadow.style).join(',') }}\n        />\n      </div>\n      <div className=\"pgn-doc__box-shadow-generator--toolkit\">\n        <div className=\"d-flex overflow-auto mb-2\">\n          {boxShadows.map((boxShadow) => (\n            <BoxShadowToolkit\n              key={boxShadow.id}\n              id={boxShadow.id}\n              updateBoxShadow={updateBoxShadow}\n              removeBoxShadowLayer={removeBoxShadowLayer}\n              disableBoxShadowLayer={disableBoxShadowLayer}\n              enableBoxShadowLayer={enableBoxShadowLayer}\n              isDisabled={!boxShadow.enabled}\n              canDelete={boxShadows.length > 1}\n            />\n          ))}\n        </div>\n        <div className=\"d-flex justify-content-between flex-column flex-md-row\">\n          <code className=\"pgn-doc__box-shadow-generator--toolkit-code mb-3 mb-md-0\">\n            {boxShadows.filter(shadow => shadow.enabled).length > 0\n              ? `box-shadow: ${boxShadows.filter(shadow => shadow.enabled).map(shadow => shadow.style).join(',')};`\n              : 'No styles applied'}\n          </code>\n          <Button onClick={addNewBoxShadowLayer} variant=\"dark\">Add New Layer</Button>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default function ElevationPage() {\n  const levelTitle = boxShadowLevels.map(level => (\n    <h3 key={level} className=\"pgn-doc__box-shadow-level-title\">\n      Level {level}\n    </h3>\n  ));\n\n  const sideTitle = boxShadowSides.map(side => (\n    <h3 key={side} className=\"pgn-doc__box-shadow-side-title\">\n      {side.charAt(0).toUpperCase() + side.substring(1)}\n    </h3>\n  ));\n\n  return (\n    <Layout>\n      <Container className=\"py-5\" size=\"md\">\n        {/* eslint-disable-next-line react/jsx-pascal-case */}\n        <SEO title=\"Elevation\" />\n        <h1 className=\"mb-3\">Elevation & Shadow</h1>\n        <p className=\"mb-5\">\n          You can quickly add a <code>box-shadow</code> with the Clickable Box-Shadow Grid.\n          Click on the <code>box-shadow</code> you like and it will be copied to your clipboard.\n        </p>\n        <div className=\"pgn-doc__box-shadow-wrapper\">\n          <div className=\"d-flex pt-1\">\n            <div className=\"pgn-doc__box-shadow-level-titles\">\n              {levelTitle}\n            </div>\n            <BoxShadowNode />\n          </div>\n          <div className=\"pgn-doc__box-shadow-side-titles\">\n            <h3 className=\"pgn-doc__box-shadow-side-title\">\n              Direction\n            </h3>\n            {sideTitle}\n          </div>\n        </div>\n\n        <h3>Box-shadow Usage</h3>\n        <p>Include these box-shadows colors in scss files in this ways:</p>\n\n        <h4>Mixin</h4>\n        <code className=\"d-block mb-4 lead bg-gray-100 p-3\">\n          pgn-box-shadow($level, $side)\n        </code>\n        <div className=\"pgn-doc__box-shadow--table-wrapper\">\n          <table className=\"pgn-doc__table table\">\n            <tbody>\n              <tr>\n                <td>\n                  <strong>Direction name</strong>\n                </td>\n                <td>\n                  {boxShadowSides.map(side => (\n                    <code key={side} className=\"mr-2\">{side}</code>\n                  ))}\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Levels</strong>\n                  <br />\n                  <p>Box-shadows elevation levels</p>\n                </td>\n                <td>\n                  {boxShadowLevels.map(level => (\n                    <code key={level} className=\"mr-2\">{level}</code>\n                  ))}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <h4>Example classes usage</h4>\n        <p>Classes are available with following pattern: </p>\n        <code className=\"d-block mb-2 bg-gray-100 p-3\">\n          {'.box-shadow-{direction}-{level}'}\n        </code>\n        <p>For example:</p>\n        <code className=\"d-block mb-2 bg-gray-100 p-3\">\n          .box-shadow-right-2\n        </code>\n        <code className=\"d-block mb-2 bg-gray-100 p-3\">\n          .box-shadow-up-3\n        </code>\n        <br />\n\n        <h4>Example mixin usage</h4>\n        <p>Mixin can be used as follows: </p>\n        <code className=\"d-block mb-2 bg-gray-100 p-3\">\n          @include pgn-box-shadow(level, side);\n        </code>\n        <p>For example:</p>\n        <code className=\"d-block mb-2 bg-gray-100 p-3\">\n          @include pgn-box-shadow(1, &quot;down&quot;);\n        </code>\n        <code className=\"d-block mb-2 bg-gray-100 p-3\">\n          @include pgn-box-shadow(3, &quot;left&quot;);\n        </code>\n        <br />\n\n        <h4>Example variables usage</h4>\n        <p>Variables are available with following pattern: </p>\n        <code className=\"d-block mb-2 bg-gray-100 p-3\">\n          {'$box-shadow-{direction}-{level}'}\n        </code>\n        <p>For example:</p>\n        <code className=\"d-block mb-2 bg-gray-100 p-3\">\n          $box-shadow-right-2\n        </code>\n        <code className=\"d-block mb-2 bg-gray-100 p-3\">\n          $box-shadow-up-3\n        </code>\n        <br />\n\n        <h3 className=\"mt-5\">Box-shadow generator</h3>\n        <p>\n          Use the sliders and the color picker to set the values and watch the live preview until you reach the\n          desired effect. Select the <code>right-down shift</code>, <code>spread</code>, <code>blur</code>,\n          and <code>color</code>. Pick a custom color for\n          the preview background and your object. Web browsers allow us to add more than one shadow to our design\n          and so does this online tool. Use the Add New Layer button to save the current line and set up a new one.\n        </p>\n        <BoxShadowGenerator />\n      </Container>\n    </Layout>\n  );\n}\n","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    var intl = React.useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n"],"names":["_excluded","propTypes","label","onClick","CloseButton","_ref","ref","className","props","type","displayName","defaultProps","Input","componentDidMount","process","getHTMLTagForType","this","getClassNameForType","setRef","forwardedRef","checkHasLabel","inputEl","labels","length","getAttribute","console","warn","renderOptions","options","map","option","value","group","attributes","key","render","htmlTag","htmlProps","classNames","undefined","htmlChildren","React","InputWithRefForwarding","onClose","ToastHeader","bsPrefix","closeLabel","closeButton","children","context","useContext","handleClick","useEventCallback","e","Toast","_ref$transition","transition","Transition","Fade","_ref$show","show","_ref$animation","animation","_ref$delay","delay","_ref$autohide","autohide","delayRef","useRef","onCloseRef","useEffect","current","autohideTimeout","useTimeout","autohideToast","autohideFunc","useCallback","set","toastContext","useMemo","hasAnimation","toast","role","in","unmountOnExit","Object","assign","Body","ToastBody","Header","ToastContainer","toastRootName","document","rootElement","getElementById","createElement","setAttribute","body","appendChild","ReactDOM","TOAST_CLOSE_LABEL_TEXT","TOAST_DELAY","action","rest","intl","useIntl","autoHide","setAutoHide","useState","intlCloseLabel","formatMessage","id","defaultMessage","description","onBlur","onFocus","onMouseOut","onMouseOver","IconButton","iconAs","Icon","alt","src","Close","variant","invertColors","Button","as","href","size","boxShadowSides","boxShadowLevels","DEFAULT_BOX_SHADOW","controlsProps","name","BoxShadowNode","showToast","setShowToast","isBoxShadowCopied","level","side","navigator","clipboard","writeText","boxShadowCells","tabIndex","onKeyDown","BoxShadowToolkit","updateBoxShadow","removeBoxShadowLayer","disableBoxShadowLayer","enableBoxShadowLayer","isDisabled","canDelete","boxShadowModel","setBoxShadowModel","x","y","blur","spread","color","inset","updateBoxShadowModel","property","global","analytics","track","newBoxShadowModel","htmlFor","min","max","defaultValue","onChange","target","disabled","floatLabelLeft","tooltipPlacement","tooltipContent","WbSunny","DoDisturb","BoxShadowGenerator","boxShadows","setBoxShadows","enabled","style","shadow","item","toolkitId","filter","updatedBoxShadows","boxShadow","join","ElevationPage","levelTitle","sideTitle","charAt","toUpperCase","substring","title"],"sourceRoot":""}