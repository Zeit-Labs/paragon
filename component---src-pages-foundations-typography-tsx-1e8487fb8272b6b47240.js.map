{"version":3,"file":"component---src-pages-foundations-typography-tsx-1e8487fb8272b6b47240.js","mappings":"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","sources":["webpack://paragon-pattern-library-documentation/./src/components/MeasuredItem.tsx","webpack://paragon-pattern-library-documentation/./src/pages/foundations/typography.tsx"],"sourcesContent":["import React, {\n  useContext,\n  useState,\n  useRef,\n  useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SettingsContext } from '../context/SettingsContext';\n\nexport interface IMeasuredItem {\n  properties: string[],\n  renderBefore?: Function,\n  renderAfter?: Function,\n  children: React.ReactNode,\n}\n\nconst initialMeasurements = {};\n\nfunction MeasuredItem({\n  properties,\n  renderBefore,\n  renderAfter,\n  children,\n}: IMeasuredItem) {\n  const { settings } = useContext(SettingsContext);\n  const { theme } = settings;\n  const [measurements, setMeasurements] = useState(initialMeasurements);\n  const itemRef = useRef();\n\n  useEffect(\n    () => {\n      const measure = () => {\n        if (!itemRef.current) {\n          return;\n        }\n        const computedStyle = getComputedStyle(itemRef.current);\n        const measurementsItems = properties.reduce((acc: { [x: string]: string; }, property: string) => {\n          acc[property] = computedStyle.getPropertyValue(property);\n          return acc;\n        }, {});\n        setMeasurements(measurementsItems);\n      };\n      // Needs a moment to finish switching theme and re-render children to DOM first.\n      setMeasurements(initialMeasurements);\n      const timeout = setTimeout(measure, 1000);\n      return () => clearTimeout(timeout);\n    },\n    [theme, properties],\n  );\n\n  return (\n    <>\n      {renderBefore ? renderBefore(measurements) : null}\n      {React.cloneElement(children as React.ReactElement, { ref: itemRef })}\n      {renderAfter ? renderAfter(measurements) : null}\n    </>\n  );\n}\n\nMeasuredItem.propTypes = {\n  properties: PropTypes.arrayOf(PropTypes.string),\n  renderBefore: PropTypes.func,\n  renderAfter: PropTypes.func,\n  children: PropTypes.node.isRequired,\n};\n\nMeasuredItem.defaultProps = {\n  properties: [],\n  renderBefore: undefined,\n  renderAfter: undefined,\n};\n\nexport default MeasuredItem;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Container } from '~paragon-react';\nimport SEO from '../../components/SEO';\nimport MeasuredItem from '../../components/MeasuredItem';\nimport Layout from '../../components/PageLayout';\n\nexport type WeightLabelsTypes = {\n  [key: string]: string,\n};\n\nconst weightLabels: WeightLabelsTypes = {\n  200: 'Light',\n  300: 'Light',\n  400: 'Regular',\n  500: 'Medium',\n  600: 'Medium',\n  700: 'Bold',\n  800: 'Black',\n};\n\nconst measuredTypeProps = {\n  properties: ['font-size', 'line-height', 'font-family', 'font-weight'],\n  renderAfter: (measurements: { [x: string]: string; }) => {\n    const fontFamily = measurements['font-family']\n      ? measurements['font-family'].split(',')[0]\n      : null;\n    const weight = weightLabels[measurements['font-weight']];\n    // only one significant digit if needed\n    const fontSize = Math.round(Number.parseFloat(measurements['font-size']) * 10) / 10;\n    const lineHeight = Math.round(Number.parseFloat(measurements['line-height']) * 10) / 10;\n\n    return (\n      <p className=\"m-0 text-muted\">\n        <span className=\"mr-2\">\n          {fontFamily} {weight}\n        </span>\n        {fontSize}px / {lineHeight}px\n      </p>\n    );\n  },\n};\n\nexport default function TypographyPage() {\n  return (\n    <Layout>\n      <Container size=\"xl\" className=\"py-5\">\n        {/* eslint-disable-next-line react/jsx-pascal-case */}\n        <SEO title=\"Typography\" />\n        <h1>Typography</h1>\n        <table className=\"w-100 table pgn-doc__status-table\">\n          <tbody>\n            <tr>\n              <th colSpan={3}>\n                <h2 className=\"mt-3\">Headings</h2>\n              </th>\n            </tr>\n            <tr>\n              <th>Desktop</th>\n              <th>Mobile</th>\n              <th>CSS Class</th>\n            </tr>\n            {[1, 2, 3, 4, 5, 6].map(headingSize => (\n              <tr>\n                <td>\n                  <MeasuredItem {...measuredTypeProps}>\n                    <p className={`m-0 h${headingSize}`}>\n                      Heading {headingSize}\n                    </p>\n                  </MeasuredItem>\n                </td>\n                <td className=\"mobile-type\">\n                  <MeasuredItem {...measuredTypeProps}>\n                    <p className={`m-0 h${headingSize}`}>\n                      Heading {headingSize}\n                    </p>\n                  </MeasuredItem>\n                </td>\n                <td>\n                  <code>.h{headingSize}</code>\n                </td>\n              </tr>\n            ))}\n            <tr>\n              <td colSpan={2}>\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"heading-label\">Heading Label</p>\n                </MeasuredItem>\n                A heading label is usually paired with and proceeds a Heading.\n              </td>\n              <td>\n                <code>.heading-label</code>\n              </td>\n            </tr>\n          </tbody>\n          <tbody>\n            <tr>\n              <th colSpan={3}>\n                <h2 className=\"mt-3\">Body</h2>\n              </th>\n            </tr>\n            <tr>\n              <th colSpan={2}>Desktop & Mobile</th>\n              <th>CSS Class</th>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"lead m-0\">Large Body</p>\n                </MeasuredItem>\n              </td>\n              <td>\n                <code>.lead</code>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={3}>\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"m-0\">Body</p>\n                </MeasuredItem>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"small m-0\">Small Body</p>\n                </MeasuredItem>\n              </td>\n              <td>\n                <code>.small</code>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"x-small m-0\">Extra Small Body</p>\n                </MeasuredItem>\n              </td>\n              <td>\n                <code>.x-small</code>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"micro m-0\">Micro Body</p>\n                </MeasuredItem>\n              </td>\n              <td>\n                <code>.micro</code>\n              </td>\n            </tr>\n          </tbody>\n          <tbody>\n            <tr>\n              <th colSpan={3}>\n                <h2 className=\"mt-3\">Display</h2>\n              </th>\n            </tr>\n            <tr>\n              <th>Desktop</th>\n              <th>Mobile</th>\n              <th>CSS Class</th>\n            </tr>\n            {[1, 2, 3, 4].map(displaySize => (\n              <tr>\n                <td>\n                  <MeasuredItem {...measuredTypeProps}>\n                    <p className={`m-0 display-${displaySize}`}>\n                      Display {displaySize}\n                    </p>\n                  </MeasuredItem>\n                </td>\n                <td className=\"mobile-type\">\n                  <MeasuredItem {...measuredTypeProps}>\n                    <p className={`m-0 display-${displaySize}`}>\n                      Display {displaySize}\n                    </p>\n                  </MeasuredItem>\n                </td>\n                <td>\n                  <code>.display-{displaySize}</code>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n          <tbody>\n            <tr>\n              <th colSpan={3}>\n                <h2 className=\"mt-3\">Links</h2>\n              </th>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <a href=\"#\">Standalone Link</a>\n              </td>\n              <td>\n                <small>\n                  The default style for <code>a</code> tags that don&apos;t appear in\n                  a <code>p</code> tag.\n                </small>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <p>\n                  An{' '}\n                  <a className=\"inline-link\" href=\"#\">\n                    inline link\n                  </a>{' '}\n                  in a sentence.\n                </p>\n              </td>\n              <td>\n                <small>\n                  For links inside a <code>p</code> or with the{' '}\n                  <code>.inline-link</code> class name.\n                </small>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <a className=\"muted-link\" href=\"#\">\n                  Muted, Standalone Link\n                </a>\n              </td>\n              <td>\n                <small>\n                  <code>.muted-link</code> not in a <code>p</code> tag.\n                </small>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <p>\n                  An{' '}\n                  <a className=\"muted-link inline-link\" href=\"#\">\n                    muted, inline link\n                  </a>{' '}\n                  in a sentence.\n                </p>\n              </td>\n              <td>\n                <small>\n                  For <code>.muted-link</code> links inside a <code>p</code> or\n                  with the <code>.inline-link</code> class name.\n                </small>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <table className=\"w-100 table pgn-doc__status-table\">\n          <tbody>\n            <tr>\n              <th colSpan={2}>\n                <h2>Decoration and Emphasis</h2>\n              </th>\n            </tr>\n            <tr>\n              <th>Style</th>\n              <th>CSS Class</th>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-lowercase\">Lowercase text.</p>\n              </td>\n              <td>\n                <code>.text-lowercase</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-uppercase\">uppercase text.</p>\n              </td>\n              <td>\n                <code>.text-uppercase</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-capitalize\">capitalize text.</p>\n              </td>\n              <td>\n                <code>.text-capitalize</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-decoration-none\">No decorations.</p>\n              </td>\n              <td>\n                <code>.text-decoration-none</code>\n              </td>\n            </tr>\n\n            <tr>\n              <td>\n                <p className=\"text-italic\">Italic text.</p>\n              </td>\n              <td>\n                <code>.text-italic</code>\n              </td>\n            </tr>\n\n            <tr>\n              <td>\n                <p className=\"font-weight-bold\">Bold text.</p>\n              </td>\n              <td>\n                <code>.font-weight-bold</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"font-weight-normal\">Regular text.</p>\n              </td>\n              <td>\n                <code>.font-weight-normal</code>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <table className=\"w-100 table pgn-doc__status-table\">\n          <tbody>\n            <tr>\n              <th colSpan={2}>\n                <h2>Alignment</h2>\n              </th>\n            </tr>\n            <tr>\n              <th>Style</th>\n              <th>CSS Class</th>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-left\">left text.</p>\n              </td>\n              <td>\n                <code>.text-left</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-right\">right text.</p>\n              </td>\n              <td>\n                <code>.text-right</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-center\">center text.</p>\n              </td>\n              <td>\n                <code>.text-center</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-justify\">justify text.</p>\n                <p\n                  className=\"text-justify text-muted small\"\n                  style={{ maxWidth: '20rem' }}\n                >\n                  At the edge of forever tendrils of gossamer clouds corpus\n                  callosum culture Vangelis dispassionate extraterrestrial\n                  observer.\n                </p>\n              </td>\n              <td>\n                <code>.text-justify</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-wrap\">wrap text.</p>\n              </td>\n              <td>\n                <code>.text-wrap</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-nowrap\">nowrap text.</p>\n              </td>\n              <td>\n                <code>.text-nowrap</code>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Container>\n    </Layout>\n  );\n}\n"],"names":["initialMeasurements","MeasuredItem","children","settings","useContext","theme","setMeasurements","useState","itemRef","useRef","useEffect","timeout","setTimeout","computedStyle","getComputedStyle","measurementsItems","properties","acc","clearTimeout","renderBefore","ref","renderAfter","undefined","weightLabels","measuredTypeProps","measurements","fontFamily","weight","fontSize","Math","Number","lineHeight","className","TypographyPage","size","title","colSpan","headingSize","displaySize","href","style","maxWidth"],"sourceRoot":""}