{"version":3,"file":"component---src-pages-guides-installation-and-usage-mdx-b5e45ae1fb15ff3c963a.js","mappings":"mLA+BA,IApBA,SAAuB,GAIH,IAJG,EAAC,EAAD,cAGrBA,GACiB,EACjB,MAAMC,EAAK,IAAGC,IAEd,OACE,mBAAGF,GAAH,EAAWG,UAAU,oBADvB,K,gJCRF,MAAMC,EAAa,CACjBC,GAAKC,GAA8B,mCAAeJ,EAAE,KADnC,IAEjBK,GAAKD,GAA8B,mCAAeJ,EAAE,KAFnC,IAGjBM,GAAKF,GAA8B,mCAAeJ,EAAE,KAHnC,IAIjBO,GAAKH,GAA8B,mCAAeJ,EAAE,KAJnC,IAKjBQ,GAAKJ,GAA8B,mCAAeJ,EAAE,KALnC,IAMjBS,GAAKL,GAA8B,mCAAeJ,EAAE,KANnC,IAOjBU,IAAMN,GAEmC,sBATxB,GAUjBO,KAViB,IAWjBC,KAXiB,QAuBJ,SAASC,EAAa,GAA+C,IAAD,MAA9C,SAAC,EAAD,YAAYC,GAAkC,EACjF,OACE,yBAEE,qBAAKC,MAAOD,MAAAA,GAAF,UAAEA,EAAF,gCAAEA,EAA0BC,QACtC,qBAAWC,KAAX,KAAqBf,UAAU,QAC7B,+BAAagB,WAAYf,GAL/B,O,2KC1BWgB,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCL,GAEC,EADEb,GACF,YACD,OAAO,SAACgB,EAAD,iBAAeD,EAAiBf,EAAhC,CAAuCa,WAAYA,EAAYM,QAAQ,eAG5E,eACE,GAAM,0BACH,0BAAwB,cAAGC,WAAW,KACvC,cAAe,OACf,UAAa,EACb,KAAQ,4BACP,iBAAMA,WAAW,IAChB,UAAa,mBACV,QACT,kBAAK,yFACL,kBAAK,iBACL,qBAAK,iBAAMA,WAAW,OAAgB,iCAEtC,kBAAK,2BACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,qDAEP,eACE,GAAM,mBACH,mBAAiB,cAAGA,WAAW,KAChC,cAAe,OACf,UAAa,EACb,KAAQ,qBACP,iBAAMA,WAAW,IAChB,UAAa,mBACV,QACT,kBAAK,yBACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,mDAEP,kBAAK,wBACL,kBAAK,gNAA8M,uBAAYA,WAAW,KAAM,YAAyB,gFAA8E,cAAGA,WAAW,IACjW,KAAQ,gEACL,QAAY,+FACnB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,mRAOP,kBAAK,uHAKTF,EAAWG,gBAAiB","sources":["webpack://paragon-pattern-library-documentation/./src/components/LinkedHeading.tsx","webpack://paragon-pattern-library-documentation/./src/templates/default-mdx-page-template.tsx","webpack://paragon-pattern-library-documentation/./src/pages/guides/installation-and-usage.mdx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport interface ILinkedHeading {\n  h: string,\n  children: React.ReactNode,\n  id: string,\n}\n\ntype HeadingTag = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n\nfunction LinkedHeading({\n  h,\n  children,\n  id,\n}: ILinkedHeading) {\n  const H = `h${h}` as HeadingTag;\n\n  return (\n    <H id={id} className=\"pgn-doc__heading\">\n      {children}\n    </H>\n  );\n}\n\nLinkedHeading.propTypes = {\n  h: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default LinkedHeading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MDXProvider } from '@mdx-js/react';\nimport { Link } from 'gatsby';\nimport { Container } from '~paragon-react';\nimport CodeBlock from '../components/CodeBlock';\nimport Layout from '../components/PageLayout';\nimport SEO from '../components/SEO';\nimport LinkedHeading from '../components/LinkedHeading';\n\nconst shortcodes = {\n  h1: (props: HTMLHeadingElement) => <LinkedHeading h=\"1\" {...props} />,\n  h2: (props: HTMLHeadingElement) => <LinkedHeading h=\"2\" {...props} />,\n  h3: (props: HTMLHeadingElement) => <LinkedHeading h=\"3\" {...props} />,\n  h4: (props: HTMLHeadingElement) => <LinkedHeading h=\"4\" {...props} />,\n  h5: (props: HTMLHeadingElement) => <LinkedHeading h=\"5\" {...props} />,\n  h6: (props: HTMLHeadingElement) => <LinkedHeading h=\"6\" {...props} />,\n  pre: (props:\n  JSX.IntrinsicAttributes & React.ClassAttributes<HTMLDivElement> &\n  React.HTMLAttributes<HTMLDivElement>) => <div {...props} />,\n  code: CodeBlock,\n  Link,\n};\n\nexport interface IPageTemplateType {\n  children: React.ReactNode,\n  pageContext: {\n    frontmatter: {\n      title: string,\n    },\n  },\n}\n\nexport default function PageTemplate({ children, pageContext }: IPageTemplateType) {\n  return (\n    <Layout>\n      {/* eslint-disable-next-line react/jsx-pascal-case */}\n      <SEO title={pageContext?.frontmatter?.title} />\n      <Container size=\"md\" className=\"py-5\">\n        <MDXProvider components={shortcodes}>{children}</MDXProvider>\n      </Container>\n    </Layout>\n  );\n}\n\nPageTemplate.propTypes = {\n  children: PropTypes.node.isRequired,\n  // Require mdx files to define their page title using frontmatter\n  pageContext: PropTypes.shape({\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/paragon/paragon/www/src/templates/default-mdx-page-template.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"installation-and-usage\"\n    }}>{`Installation and usage`}<a parentName=\"h1\" {...{\n        \"aria-hidden\": \"true\",\n        \"tabIndex\": -1,\n        \"href\": \"#installation-and-usage\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"pgn-doc__anchor\"\n        }}>{`#`}</span></a></h1>\n    <p>{`Paragon components require React 16 or higher. To install Paragon into your project:`}</p>\n    <p>{`In terminal:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm i --save @edx/paragon\n`}</code></pre>\n    <p>{`In your React project:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { ComponentName } from '@edx/paragon';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"scss-foundation\"\n    }}>{`SCSS Foundation`}<a parentName=\"h2\" {...{\n        \"aria-hidden\": \"true\",\n        \"tabIndex\": -1,\n        \"href\": \"#scss-foundation\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"pgn-doc__anchor\"\n        }}>{`#`}</span></a></h2>\n    <p>{`Usage with no theme:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@import \"@edx/paragon/scss/core/core.scss\";\n`}</code></pre>\n    <p>{`Usage with a theme:`}</p>\n    <p>{`When working with a theme the order of imports is important: if you need to override Paragon's variables you must import theme's variables before Paragon core (that's because all variables in Paragon use `}<inlineCode parentName=\"p\">{`!default`}</inlineCode>{` flag which allows you to override them before importing, you can read more `}<a parentName=\"p\" {...{\n        \"href\": \"https://sass-lang.com/documentation/variables#default-values\"\n      }}>{`here`}</a>{`), while to override Paragon's styles, the theme's style overrides must be imported after.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@import \"@my-brand/fonts.scss\";\n@import \"@my-brand/variables.scss\";\n// Import the Paragon core after setting brand-themed variables.\n@import \"@edx/paragon/scss/core/core.scss\";\n// Import brand overrides after the Paragon core.\n@import \"@my-brand/overrides.scss\";\n`}</code></pre>\n    <p>{`Note that including fonts will affect load performance.  In some pages you may choose not to load the custom font.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["id","H","h","className","shortcodes","h1","props","h2","h3","h4","h5","h6","pre","code","Link","PageTemplate","pageContext","title","size","components","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","mdxType","parentName","isMDXComponent"],"sourceRoot":""}