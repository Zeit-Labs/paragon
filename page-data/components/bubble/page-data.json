{"componentChunkName":"component---src-templates-component-page-template-tsx","path":"/components/bubble/","result":{"data":{"mdx":{"id":"f86db87b-5306-5969-8c7e-df4b08b6e8bf","body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {\n  \"title\": \"Bubble\",\n  \"type\": \"component\",\n  \"components\": [\"Bubble\"],\n  \"status\": \"New\",\n  \"categories\": [\"Status & metadata\"],\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"Done\",\n  \"notes\": \"\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Represents the filled circle with a number of an icon, supporting the usual color variants`), mdx(\"h2\", {\n    \"id\": \"basic-usage\"\n  }, `Basic Usage`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#basic-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  return (\n    <>\n      <Stack direction=\"horizontal\" gap={4} className=\"mb-2\">\n        <Bubble>\n          1\n        </Bubble>\n        <Bubble variant=\"error\">\n          1\n        </Bubble>\n        <Bubble variant=\"warning\">\n          1\n        </Bubble>\n        <Bubble variant=\"success\">\n          1\n        </Bubble>\n      </Stack>\n      <Stack direction=\"horizontal\" gap={4} className=\"mb-2\">\n        <Bubble>\n          <Icon src={Check} />\n        </Bubble>\n        <Bubble variant=\"error\">\n          <Icon src={Check} />\n        </Bubble>\n        <Bubble variant=\"warning\">\n          <Icon src={Check} />\n        </Bubble>\n        <Bubble variant=\"success\">\n          <Icon src={Check} />\n        </Bubble>\n      </Stack>\n    </>\n  );\n}\n`)), mdx(\"h3\", {\n    \"id\": \"disabled-variant\"\n  }, `Disabled variant`, mdx(\"a\", {\n    parentName: \"h3\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#disabled-variant\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  return (\n    <Stack direction=\"horizontal\" gap={4} className=\"mb-2\">\n      <Bubble disabled>\n        1\n      </Bubble>\n      <Bubble disabled>\n        <Icon src={Check} />\n      </Bubble>\n    </Stack>\n  );\n}\n`)), mdx(\"h3\", {\n    \"id\": \"expandable\"\n  }, `Expandable`, mdx(\"a\", {\n    parentName: \"h3\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#expandable\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"p\", null, `In the case of long content use `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `expandable`), ` prop. It adds padding to `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Bubble`), `. Padding value is configurable through `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `scss`), ` variables.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  {/* start example state */}\n  const [isExpandable, setIsExpandable] = useState(true);\n  {/* end example state */}\n\n  return (\n    <>\n      {/* start example form block */}\n      <ExamplePropsForm\n        inputs={[\n          { value: isExpandable, setValue: () => setIsExpandable(!isExpandable), name: 'isExpandable' },\n        ]}\n      />\n      {/* end example form block */}\n      <Bubble variant=\"error\" expandable={isExpandable}>\n        1234\n      </Bubble>\n    </>\n  );\n}\n`)));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Bubble","status":"New","notes":"","components":["Bubble"]},"tableOfContents":{"items":[{"url":"#basic-usage","title":"Basic Usage","items":[{"url":"#disabled-variant","title":"Disabled variant"},{"url":"#expandable","title":"Expandable"}]}]}},"components":{"nodes":[{"displayName":"Bubble","props":[{"defaultValue":null,"name":"children","type":{"name":"node","raw":null,"value":null},"required":true,"docblock":"Specifies contents of the component.","doclets":[],"description":{"id":"7ed15a89-eb3a-53bc-a7b0-0bfef0e41541","text":"Specifies contents of the component.","childMdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies contents of the component.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'primary'"},"name":"variant","type":{"name":"enum","raw":null,"value":[{"value":"'primary'","computed":false},{"value":"'success'","computed":false},{"value":"'error'","computed":false},{"value":"'warning'","computed":false}]},"required":false,"docblock":"The `Bubble` style variant to use.","doclets":[],"description":{"id":"aa99dfcb-396c-5f82-8cf3-0442c8658ed1","text":"The `Bubble` style variant to use.","childMdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `The `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Bubble`), ` style variant to use.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"disabled","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Activates disabled variant.","doclets":[],"description":{"id":"0e6fc4ad-370b-56dd-ac04-bcffd8679760","text":"Activates disabled variant.","childMdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Activates disabled variant.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"A class name to append to the base element.","doclets":[],"description":{"id":"8577ff01-4841-5540-ab2c-b01211aaf6dc","text":"A class name to append to the base element.","childMdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `A class name to append to the base element.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"expandable","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Specifies whether to add padding to the `Bubble` or not.","doclets":[],"description":{"id":"de6edd1b-930c-5226-a80b-272fc9218836","text":"Specifies whether to add padding to the `Bubble` or not.","childMdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies whether to add padding to the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Bubble`), ` or not.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"f86db87b-5306-5969-8c7e-df4b08b6e8bf","components":["Bubble"],"scssVariablesData":{"openedx":"$bubble-success-color:  var(--pgn-bubble-color-text-success) !default;\n$bubble-success-bg:  var(--pgn-bubble-color-bg-success) !default;\n$bubble-warning-color:  var(--pgn-bubble-color-text-warning) !default;\n$bubble-warning-bg:  var(--pgn-bubble-color-bg-warning) !default;\n$bubble-error-color:  var(--pgn-bubble-color-text-error) !default;\n$bubble-error-bg:  var(--pgn-bubble-color-bg-error) !default;\n$bubble-primary-color:  var(--pgn-bubble-color-text-primary) !default;\n$bubble-primary-bg:  var(--pgn-bubble-color-bg-primary) !default;\n$bubble-expandable-padding-x:  var(--pgn-bubble-expandable-padding-x) !default;\n$bubble-expandable-padding-y:  var(--pgn-bubble-expandable-padding-y) !default;\n","edxorg":"$bubble-success-color:  var(--pgn-bubble-color-text-success) !default;\n$bubble-success-bg:  var(--pgn-bubble-color-bg-success) !default;\n$bubble-warning-color:  var(--pgn-bubble-color-text-warning) !default;\n$bubble-warning-bg:  var(--pgn-bubble-color-bg-warning) !default;\n$bubble-error-color:  var(--pgn-bubble-color-text-error) !default;\n$bubble-error-bg:  var(--pgn-bubble-color-bg-error) !default;\n$bubble-primary-color:  var(--pgn-bubble-color-text-primary) !default;\n$bubble-primary-bg:  var(--pgn-bubble-color-bg-primary) !default;\n$bubble-expandable-padding-x:  var(--pgn-bubble-expandable-padding-x) !default;\n$bubble-expandable-padding-y:  var(--pgn-bubble-expandable-padding-y) !default;\n"}}},"staticQueryHashes":["1303225137","3649515864","63159454"]}